name: Push or PR
on: [push, pull_request]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    
    - name: Set GOPATH
      # temporary fix
      # see https://github.com/actions/setup-go/issues/14
      run: |
        echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
        echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
      shell: bash
    
    - name: Install gox
      run: |
        go mod download
        hack/install-gox.sh\

    - name: Install dependencies
      run: go mod tidy && git diff --no-patch --exit-code
      
    - name: Verify code quality
      run: |
        hack/verify-code-patterns.sh
        hack/verify-boilerplate.sh
        hack/run-lint.sh
        
    - name: Unittest and coverage
      run: go test -short -coverprofile=coverage.txt -covermode=atomic ./...
        
    - name: Make & verify artifacts
      run: |
        hack/make-all.sh
        hack/verify-installation.sh
        
    - name: Ensure kubectl installed
      run: hack/ensure-kubectl-installed.sh
        
    - name: Integration tests
      run: hack/run-integration-tests.sh
    
    - name: Receipts upgrade migrations
      run: hack/verify-receipts-upgrade-migration.sh
        
  release:
    name: Release a tag
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'v\d+\.\d+\.\d+.*'
    steps:
    - name: Create release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: out/krew.*
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true

      

